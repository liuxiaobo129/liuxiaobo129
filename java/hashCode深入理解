 菜单腾讯云
腾讯云首页
备案控制台
云+社区
专栏问答沙龙快讯团队主页开发者手册智能钛AI在线学习中心更多
找文章 / 找答案 / 找技术大牛
写文章提问登录注册
Java hashCode() 方法深入理解
写文章
Java hashCode() 方法深入理解
用户2214491发表于java一日一条订阅
123
在这篇文章中：
WHY hashCode()?
HOW use hashCode()?
String类的hasCode()
Object类的hasCode()
Java.lang.Object 有一个hashCode()和一个equals()方法，这两个方法在软件设计中扮演着举足轻重的角色。在一些类中覆写这两个方法以完成某些重要功能。本文描述了为什么要用hashCode(), 如何使用，以及其他的一些扩展。阅读本文需要有基本的hash算法知识以及基本的Java集合知识，本文属于菜鸟入门级讲解，大神读至此请点击右上角的X，以免浪费您的时间^_^。

WHY hashCode()?
集合Set中的元素是无序不可重复的，那判断两个元素是否重复的依据是什么呢？ “比较对象是否相等当然用Object.equal()了”，某猿如是说。但是，Set中存在大量对象，后添加到集合Set中的对象元素比较次数会逐渐增多，大大降低了程序运行效率。 Java中采用哈希算法(也叫散列算法)来解决这个问题，将对象(或数据)依特定算法直接映射到一个地址上，对象的存取效率大大提高。这样一来，当含有海量元素的集合Set需要添加某元素(对象)时，先调用这个元素的hashCode()，就能一下子定位到此元素实际存储位置，如果这个位置没有元素，说明此对象时第一次存储到集合Set, 直接将此对象存储在此位置上；若此位置有对象存在，调用equal()看看这两个对象是否相等，相等就舍弃此元素不存，不等则散列到其他地址。

HOW use hashCode()?
Java语言对猿设计equal()有五个必须遵循的要求。

对称性。若 a.equal(b) 返回”true”, 则 b.equal(a) 也必须返回 “true”.
反射性。a.equal(a) 必须返回”true”.
传递性。若a.equal(b) 返回 “true”, 且 b.equal(c)返回 “true”, 则c.equal(a)必返回”true”.
一致性。若a.equal(b) 返回”true”, 只要a, b内容不变，不管重复多少次a.equal(b)必须返回”true”.
任何情况下，a.equals(null)，永远返回是“false”；a.equals(和a不同类型的对象)永远返回是“false”.
hashCode()的返回值和equals()的关系.

如果a.equals(b)返回“true”，那么a和b的hashCode()必须相等。
如果a.equals(b)返回“false”，那么a和b的hashCode()有可能相等，也有可能不等。
下面是一个例子。在实际的软件开发中，最好重写这两个方法。


下面着重介绍一下常用类的hashCode()实现方法。

String类的hasCode()
Java代码


这段代码最有意思的还是hash的实现方法了。最终计算的hash值为：

s[i]是string的第i个字符，n是String的长度。那为什么这里用31，而不是其它数呢?

31是个奇素数，如果乘数是偶数，并且乘法溢出的话，信息就会丢失，因为与2相乘等价于移位运算。使用素数的好处并不是很明显，但是习惯上都使用素数来计算散列结果。31有个很好的特性，就是用移位和减法来代替乘法，可以得到更好的性能：31*i==(i<<5)-i。现在的VM可以自动完成这种优化。(From Effective Java)

Object类的hasCode()
Object类中hashCode()是一个Native方法。Native方法如何调用?


Object类的Native方法类可在这里找到。

源代码包括getClass()(See line58)等, hashCode()(See line43)被定义为一个指向JVM_IHashCode指针。

jvm.cpp中定义了JVM_IHashCode(line 504)函数, 此函数里调用ObjectSynchronizer::FastHashCode，其定在 synchronizer.cpp, 可参考576行的FastHashCode 和 530行的 get_next_hash 的实现。

原文发布于微信公众号 - java一日一条（mjx_java）

原文发表时间：2016-07-16

本文参与腾讯云自媒体分享计划，欢迎正在阅读的你也加入，一起分享。

发表于 2018-09-18
Java编程算法存储NATJVM
举报
1
0
分享

扫描二维码


java一日一条
1020 篇文章53 人订阅
订阅专栏
Java到底是不是一种纯面向对象语言？
从学生到游戏开发者: 我学到的五件事
技术主导型公司的困境
陌陌通讯协议的学习
30分钟Git命令入门到放弃
我来说两句
0 条评论
登录 后参与评论
上一篇：Java到底是不是一种纯面向对象语言？
下一篇：SQL 数据库查询的优化工具及实用
相关文章
来自专栏Java技术栈订阅
Java 程序员必须掌握的 5 个注解！
* 来源：www.codeceo.com/5-annotations-every-java-developer-should-know.html

9620
来自专栏JAVA高级架构订阅
JAVA基础面试总结
1.00 什么时候使用基于接口编程？ 基于接口编程、Fascade层等等抽象封装都是有开发和维护的代价的，是否使用归根结底还是要看团队人员的分工情况， 技术方...

34880
来自专栏程序员互动联盟订阅
【编程基础】C++初学者需掌握的10个C++特性（中）
Strongly-typed enums 强类型枚举 传统的C++枚举类型存在一些缺陷：它们会将枚举常量暴露在外层作用域中（这可能导致名字冲突，如果同一个作用域...

33340
来自专栏数据科学与人工智能订阅
【Python环境】Python面试题汇总(一)
拿网络上关于Python的面试题汇总了，给出了自认为合理的答案，有些题目不错，可以从中学到点什么，答案如不妥，请指正...... +++++++++++++++...

35660
来自专栏程序你好订阅
C# 发展历史及版本新功能介绍

9320
来自专栏大闲人柴毛毛订阅
Java8新特性——StreamAPI(一)
1. 流的基本概念 1.1 什么是流？ 流是Java8引入的全新概念，它用来处理集合中的数据，暂且可以把它理解为一种高级集合。 众所周知，集合操作非常麻烦，若...

36590
来自专栏用户2442861的专栏订阅
《Effective Modern C++》读书笔记
Note：为避免各种侵权问题，本文并没有复制原书任意文字(代码除外，作者已经声明代码可以被使用)。需要原书完整中文翻译的读者请等待官方译本的发布。

62220
来自专栏web编程技术分享订阅
小兔JS教程（四）-- 彻底攻略JS数组

42280
来自专栏葡萄城控件技术团队订阅
C＃7.0中有哪些新特性？
以下将是 C# 7.0 中所有计划的语言特性的描述。随着 Visual Studio “15” Preview 4 版本的发布，这些特性中的大部分将活跃起来。现...

19880
来自专栏信安之路订阅
【作者投稿】奇葩webshell技巧
前段时间看XDCTF的一道web题，发现了一种很奇特的构造webshell的方法。

13600
社区
专栏文章
互动问答
技术沙龙
技术快讯
团队主页
开发者手册
智能钛AI
活动
原创分享计划
自媒体分享计划
资源
在线学习中心
技术周刊
社区标签
开发者实验室
关于
社区规范
免责声明
联系我们

扫码关注云+社区

领取腾讯云代金券

Copyright © 2013-2019
Tencent Cloud. All Rights Reserved.
腾讯云 版权所有 京ICP备11018762号
京公网安备 11010802020287

扫描二维码


返回顶部