博客园Logo
首页
新闻
博问
专区
闪存
班级
代码改变世界
搜索
注册
登录
返回主页
努力学习~~~
博客园首页新随笔联系管理订阅订阅随笔- 54  文章- 1  评论- 0 
BeanFactory父子容器的知识
容器知识点1：

在Spring中，关于父子容器相关的接口HierarchicalBeanFactory，以下是该接口的代码：

public interface HierarchicalBeanFactory extends BeanFactory {
    BeanFactory getParentBeanFactory();    //返回本Bean工厂的父工厂
    boolean containsLocalBean(String name); //本地工厂是否包含这个Bean
}
其中：

  1、第一个方法getParentBeanFactory()，返回本Bean工厂的父工厂。这个方法实现了工厂的分层。

  2、第二个方法containsLocalBean()，判断本地工厂是否包含这个Bean（忽略其他所有父工厂）。

以下会举例介绍该接口在实际实践中应用：

  (1)、定义一个Person类：

      

复制代码
class Person {
    private int age;
    private String name;
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
}
复制代码
（2）、首先需要定义两个容器定义的xml文件

 childXml.xml:

<bean id="child" class="com.spring.hierarchical.Person">
        <property name="age" value= "11"></property>
        <property name="name" value="erzi"></property>
    </bean>
parentXml.xml：

<bean id="parent" class="com.spring.hierarchical.Person">
        <property name="age" value= "50"></property>
        <property name="name" value="baba"></property>
    </bean>
（3）、写测试代码：

复制代码
public class Test {
    public static void main(String[] args) {
        //父容器
        ApplicationContext parent = new ClassPathXmlApplicationContext("parentXml.xml");
        //子容器，在构造方法中指定
        ApplicationContext child = new ClassPathXmlApplicationContext(new String[]{"childXml.xml"},parent);
        
        System.out.println(child.containsBean("child"));  //子容器中可以获取Bean:child
        System.out.println(parent.containsBean("child")); //父容器中不可以获取Bean:child
        System.out.println(child.containsBean("parent")); //子容器中可以获取Bean:parent
        System.out.println(parent.containsBean("parent")); //父容器可以获取Bean:parent
        //以下是使用HierarchicalBeanFactory接口中的方法
        ApplicationContext parent2 = (ApplicationContext) child.getParentBeanFactory();  //获取当前接口的父容器
        System.out.println(parent == parent2);
        System.out.println(child.containsLocalBean("child"));  //当前子容器本地是包含child
        System.out.println(parent.containsLocalBean("child")); //当前父容器本地不包含child
        System.out.println(child.containsLocalBean("parent")); //当前子容器本地不包含child
        System.out.println(parent.containsLocalBean("parent")); //当前父容器本地包含parent
    }
}
复制代码
标签: spring源码
好文要顶 关注我 收藏该文  
努力学习~~~
关注 - 2
粉丝 - 0
+加关注
00
« 上一篇： Spring中自动创建代理器
» 下一篇： Spring发布监听机制
posted @ 2020-01-07 18:42  努力学习~~~  阅读(738)  评论(0)  编辑  收藏
刷新评论刷新页面返回顶部
登录后才能发表评论，立即 登录 或 注册， 访问 网站首页
【推荐】News: 大型组态、工控、仿真、CADGIS 50万行VC++源码免费下载
【推荐】有你助力，更好为你——博客园用户消费观调查，附带小惊喜！
【推荐】AWS携手博客园为开发者送福利，注册立享12个月免费套餐
【推荐】七牛云新老用户同享 1 分钱抢 CDN 1TB流量大礼包！
【推荐】了不起的开发者，挡不住的华为，园子里的品牌专区
【推荐】未知数的距离，毫秒间的传递，声网与你实时互动
【推荐】新一代 NoSQL 数据库，Aerospike专区新鲜入驻

相关博文：
· Spring容器、BeanFactory和ApplicationContext,及3种装配Bean的方式
· BeanFactory和FactoryBean的区别
· beanFactory设计模式Bean生命周期
· 理解Spring容器、BeanFactory和ApplicationContext
· beanFactory&FactoryBean区别
» 更多推荐...

最新 IT 新闻:
· 嫦娥五号月球样本回收团队使用了外骨骼
· 悦刻母公司赴美上市：电子烟转战线下、利润降低
· Mozilla 探索修改 Firefox UI
· 国内互联网公司为什么加班这么狠？
· 当知名品牌停止投放数字广告
» 更多新闻...
昵称： 努力学习~~~
园龄： 2年2个月
粉丝： 0
关注： 2
+加关注
<   2021年1月 >
日   一   二   三   四   五   六
27  28  29  30  31  1   2
3   4   5   6   7   8   9
10  11  12  13  14  15  16
17  18  19  20  21  22  23
24  25  26  27  28  29  30
31  1   2   3   4   5   6
搜索
 
 
常用链接
我的随笔
我的评论
我的参与
最新评论
我的标签
更多链接
我的标签
spring源码(17)
leecode刷题(10)
JVM(2)
spring使用(1)
随笔档案
2020年1月(8)
2019年12月(16)
2019年11月(16)
2019年10月(11)
2018年11月(2)
2018年10月(1)
阅读排行榜
1. js清空input file值(5729)
2. @Value的使用(1774)
3. BeanFactory父子容器的知识(737)
4. ProxyConfig属性详解(682)
5. BeanPostProcessor原理--使用讲解(619)
Copyright © 2021 努力学习~~~
Powered by .NET 5.0 on Kubernetes